/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.AddResponse
import io.swagger.client.model.Body
import io.swagger.client.model.Error
import io.swagger.client.model.SetResponse
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object DBOperationsApi {

  /**
   * You can choose the list that will be added tha data set to with List parameter that will be sent to Header. It&#39;s equal to INSERT query at the relational databases model. The data set that will be added to the database is transmited at request body. For versions upper than v1.2.1, if the data sent is an array, all items in the array are added one by one, so they are added as a whole. 
   * 
   * Expected answers:
   *   code 200 : AddResponse (Operation Response)
   *   code 401 : Error (Unauthorized (Given AccessToken parameter is invalid.))
   *   code 403 : Error (Security Exception (Unsecured request.))
   *   code 404 : Error (Method Not Found (Called API could not found.))
   *   code 429 : Error (TooManyRequests (API limit excess. The remaning time to the date-time for that API can answer the requests is calculated as Unix Time format under TheNextReset.))
   *   code 500 : Error (ServiceException (Unexpected Error There is a detailed explanation under ErrorMessage.))
   * 
   * @param aPIKey Your Switch API Key.
   * @param accessToken Your Access Token.
   * @param list Your data list name.
   * @param body Your new value JSON.
   */
  def addPost(aPIKey: String, accessToken: String, list: String, body: String): ApiRequest[AddResponse] =
    ApiRequest[AddResponse](ApiMethods.POST, "http://tr02.switchapi.com/", "/Add", "application/json")
      .withBody(body)
      .withHeaderParam("APIKey", aPIKey)
      .withHeaderParam("AccessToken", accessToken)
      .withHeaderParam("List", list)
      .withSuccessResponse[AddResponse](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](429)
      .withErrorResponse[Error](500)
        /**
   * List parameter sent remarks the list that will be do listing work on at Header. It&#39;s equal to SELECT query at relational databases. 
   * 
   * Expected answers:
   *   code 200 :  (List Item Array)
   *   code 401 : Error (Unauthorized (Given AccessToken parameter is invalid.))
   *   code 403 : Error (Security Exception (Unsecured request.))
   *   code 404 : Error (Method Not Found (Called API could not found.))
   *   code 429 : Error (TooManyRequests (API limit excess. The remaning time to the date-time for that API can answer the requests is calculated as Unix Time format under TheNextReset.))
   *   code 500 : Error (ServiceException (Unexpected Error There is a detailed explanation under ErrorMessage.))
   * 
   * @param aPIKey Your Switch API Key.
   * @param accessToken Your Access Token.
   * @param list Your data list name.
   * @param body Your Switch DB Query.
   */
  def listPost(aPIKey: String, accessToken: String, list: String, body: Body): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://tr02.switchapi.com/", "/List", "application/json")
      .withBody(body)
      .withHeaderParam("APIKey", aPIKey)
      .withHeaderParam("AccessToken", accessToken)
      .withHeaderParam("List", list)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](429)
      .withErrorResponse[Error](500)
        /**
   * List parameter sent remarks the list that will be deleted data from at Header and ListItemId parameter remarks the ID consisted by Switch DB for the data that will be deleted. It&#39;s equal to DELETE query at relational databases. 
   * 
   * Expected answers:
   *   code 200 : SetResponse (Operation Response)
   *   code 401 : Error (Unauthorized (Given AccessToken parameter is invalid.))
   *   code 403 : Error (Security Exception (Unsecured request.))
   *   code 404 : Error (Method Not Found (Called API could not found.))
   *   code 429 : Error (TooManyRequests (API limit excess. The remaning time to the date-time for that API can answer the requests is calculated as Unix Time format under TheNextReset.))
   *   code 500 : Error (ServiceException (Unexpected Error There is a detailed explanation under ErrorMessage.))
   * 
   * @param aPIKey Your Switch API Key.
   * @param accessToken Your Access Token.
   * @param list Your data list name.
   * @param listItemId Your list item id.
   */
  def setDelete(aPIKey: String, accessToken: String, list: String, listItemId: String): ApiRequest[SetResponse] =
    ApiRequest[SetResponse](ApiMethods.DELETE, "http://tr02.switchapi.com/", "/Set", "application/json")
      .withHeaderParam("APIKey", aPIKey)
      .withHeaderParam("AccessToken", accessToken)
      .withHeaderParam("List", list)
      .withHeaderParam("ListItemId", listItemId)
      .withSuccessResponse[SetResponse](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](429)
      .withErrorResponse[Error](500)
        /**
   * In order to UPDATE a object, Listname and ListItemId parameters should be sent in the Header of the REQUEST as \&quot;List\&quot;, \&quot;ListItemId\&quot;, respectively, as shown in the example below. It&#39;s equal to UPDATE query at relational databases. The data set that will be edited is transmited to the database at request body. 
   * 
   * Expected answers:
   *   code 200 : SetResponse (Operation Response)
   *   code 401 : Error (Unauthorized (Given AccessToken parameter is invalid.))
   *   code 403 : Error (Security Exception (Unsecured request.))
   *   code 404 : Error (Method Not Found (Called API could not found.))
   *   code 429 : Error (TooManyRequests (API limit excess. The remaning time to the date-time for that API can answer the requests is calculated as Unix Time format under TheNextReset.))
   *   code 500 : Error (ServiceException (Unexpected Error There is a detailed explanation under ErrorMessage.))
   * 
   * @param aPIKey Your Switch API Key.
   * @param accessToken Your Access Token.
   * @param list Your data list name.
   * @param listItemId Your list item id.
   * @param body Your new value JSON.
   */
  def setPost(aPIKey: String, accessToken: String, list: String, listItemId: String, body: String): ApiRequest[SetResponse] =
    ApiRequest[SetResponse](ApiMethods.POST, "http://tr02.switchapi.com/", "/Set", "application/json")
      .withBody(body)
      .withHeaderParam("APIKey", aPIKey)
      .withHeaderParam("AccessToken", accessToken)
      .withHeaderParam("List", list)
      .withHeaderParam("ListItemId", listItemId)
      .withSuccessResponse[SetResponse](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](429)
      .withErrorResponse[Error](500)
      

}

