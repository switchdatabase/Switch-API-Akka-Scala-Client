/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.Error
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AuthorizationApi {

  /**
   * For generating Access Token, you need API Key and API Secret parameters that are provided from the developer portal. At the request, API Key that will be sent by using header is generated as portal API Key and Signature parameter is generated as md5(APISecret + ExpireTimestamp) format. At Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information. 
   * 
   * Expected answers:
   *   code 200 : String (Access Token String)
   *   code 401 : Error (Unauthorized (Given AccessToken parameter is invalid.))
   *   code 403 : Error (Security Exception (Unsecured request.))
   *   code 404 : Error (Method Not Found (Called API could not found.))
   *   code 429 : Error (TooManyRequests (API limit excess. The remaning time to the date-time for that API can answer the requests is calculated as Unix Time format under TheNextReset.))
   *   code 500 : Error (ServiceException (Unexpected Error There is a detailed explanation under ErrorMessage.))
   * 
   * @param aPIKey Your Switch API Key.
   * @param signature Signature parameter is generated as md5(APISecret + ExpireTimestamp) format.
   * @param expire Expire parameter, token&#39;s expire date and time information must be proper to ISO 8601 standarts and Unix Time format with msec information.
   */
  def tokenGet(aPIKey: String, signature: String, expire: Long): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://tr02.switchapi.com/", "/Token", "application/json")
      .withHeaderParam("APIKey", aPIKey)
      .withHeaderParam("Signature", signature)
      .withHeaderParam("Expire", expire)
      .withSuccessResponse[String](200)
      .withErrorResponse[Error](401)
      .withErrorResponse[Error](403)
      .withErrorResponse[Error](404)
      .withErrorResponse[Error](429)
      .withErrorResponse[Error](500)
      

}

